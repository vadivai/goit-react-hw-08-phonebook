{"version":3,"file":"static/js/448.ea4ae8b2.chunk.js","mappings":"yOAKaA,EAAmB,WAC9B,IAAMC,GAAWC,EAAAA,EAAAA,MAkBjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,UAEAC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,SAzBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACff,GACEgB,EAAAA,EAAAA,IAAS,CACPX,KAAMS,EAAKG,SAASZ,KAAKa,MACzBZ,MAAOQ,EAAKG,SAASX,MAAMY,MAC3BX,SAAUO,EAAKG,SAASV,SAASW,SAMrCJ,EAAKK,OACP,EAWiCX,SAAA,EAC3BC,EAAAA,EAAAA,MAACW,EAAAA,GAAS,CAAAZ,SAAA,CAAC,QAETN,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CAACC,KAAK,OAAOjB,KAAK,OAAOkB,YAAY,gGAE7Cd,EAAAA,EAAAA,MAACW,EAAAA,GAAS,CAAAZ,SAAA,CAAC,eAETN,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CAACC,KAAK,QAAQjB,KAAK,QAAQkB,YAAY,wFAE/Cd,EAAAA,EAAAA,MAACW,EAAAA,GAAS,CAAAZ,SAAA,CAAC,YAETN,EAAAA,EAAAA,KAACmB,EAAAA,GAAK,CAACC,KAAK,WAAWjB,KAAK,WAAWkB,YAAY,qFACnDrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CAACF,KAAK,SAAQd,SAAC,oBAKhC,EC/Ce,SAASiB,IACtB,OACEvB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAlB,UACEC,EAAAA,EAAAA,MAACkB,EAAAA,GAAO,CAAAnB,SAAA,EACNN,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAAApB,SAAC,uBACNN,EAAAA,EAAAA,KAACH,EAAgB,QAIzB,C","sources":["components/RegistrationForm/RegistrationForm.js","pages/RegistrationPage.js"],"sourcesContent":["import { Formik } from 'formik';\nimport { Button, Field, Form, FormGroup } from 'helpers/common.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    // console.log('name', form.elements.name.value);\n    // console.log('email', form.elements.email.value);\n    // console.log('password', form.elements.password.value);\n    form.reset();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      // validationSchema={validation}\n    >\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          Name\n          <Field type=\"text\" name=\"name\" placeholder=\"Введіть Ваше ім'я\" />\n        </FormGroup>\n        <FormGroup>\n          Login/email\n          <Field type=\"email\" name=\"email\" placeholder=\"Введіть логін/email\" />\n        </FormGroup>\n        <FormGroup>\n          Password\n          <Field type=\"password\" name=\"password\" placeholder=\"Введіть пароль\" />\n          <Button type=\"submit\">Register</Button>\n        </FormGroup>\n      </Form>\n    </Formik>\n  );\n};\n\n// <form onSubmit={handleSubmit} autoComplete=\"off\">\n//   <label>\n//     Username\n//     <input type=\"text\" name=\"name\" />\n//   </label>\n//   <label>\n//     Email\n//     <input type=\"email\" name=\"email\" />\n//   </label>\n//   <label>\n//     Password\n//     <input type=\"password\" name=\"password\" />\n//   </label>\n//   <button type=\"submit\">Register</button>\n// </form>\n","import { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport { Section, Text } from 'helpers/common.styled';\n\nexport default function RegistrationPage() {\n  return (\n    <>\n      <Section>\n        <Text>Registration Form</Text>\n        <RegistrationForm />\n      </Section>\n    </>\n  );\n}\n"],"names":["RegistrationForm","dispatch","useDispatch","_jsx","Formik","initialValues","name","email","password","children","_jsxs","Form","onSubmit","e","preventDefault","form","currentTarget","register","elements","value","reset","FormGroup","Field","type","placeholder","Button","RegistrationPage","_Fragment","Section","Text"],"sourceRoot":""}